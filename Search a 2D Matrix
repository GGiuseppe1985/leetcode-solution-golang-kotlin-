func searchMatrix(matrix [][]int, target int) bool {
    for i := 0; i < len(matrix); i++{
        for j := 0; j < len(matrix[i]); j++{
            if matrix[i][j] == target {
                return true
            }
        }
    }
    return false
}
golang 2 solution
func searchMatrix(matrix [][]int, target int) bool {
	store := make([]int, 0, len(matrix)*len(matrix[0]))
	for i := range matrix {
		for j := range matrix[i] {
			store = append(store, matrix[i][j])
		}
	}
	return searchBinary(store, target, 0, len(store))
}

func searchBinary(arr []int, value int, low int, high int) bool {
	if low >= high {
		return false
	}
	mid := low + (high-low)/2

	if arr[mid] == value {
		return true
	}
	if arr[mid] < value {
		return searchBinary(arr, value, mid+1, high)
	}
	if arr[mid] > value {
		return searchBinary(arr, value, low, mid)
	}
	return false
}
