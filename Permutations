func permute(nums []int) [][]int {
	if len(nums) == 1 {
		return [][]int{nums}
	}
	if len(nums) == 2 {
		return [][]int{{nums[0], nums[1]}, {nums[1], nums[0]}}
	}
	var perms [][]int
	for i := range nums {
        //i is the elem we skip in subtask
        //permute([2,3]) returns [[2,3],[3,2]]
		for _, p := range permute(append(append([]int{}, nums[:i]...), nums[i+1:]...)) {
			perms = append(perms, append([]int{nums[i]}, p...))
            //[ [1,2,3], [1,3,2] ]
		}
	}
	return perms
}
