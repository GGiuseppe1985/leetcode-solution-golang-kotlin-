/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func isEvenOddTree(root *TreeNode) bool {
   q := []*TreeNode{root}
    for level := 0; len(q) > 0; level++ {
        prev := (*TreeNode)(nil)
        for _, node := range q {
            q = q[1:]
            if level%2 == 0 && node.Val%2 != 1 ||
               level%2 == 1 && node.Val%2 != 0 ||
               prev != nil && ((level%2 == 0 && prev.Val >= node.Val) ||
                               (level%2 == 1 && prev.Val <= node.Val)) {
                return false
            }
            prev = node
            if node.Left != nil {
                q = append(q, node.Left)
            }
            if node.Right != nil {
                q = append(q, node.Right)
            }
        }
    }
    return true
}
